name: Ubuntu

on:
  push:
    branches: [ master, ci ]
    tags: ['v*']
  pull_request:
    branches: [ master, ci ]

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        ./scripts/actions/install_deps_ubuntu.sh
        python -m pip install -U pip wheel setuptools

    - name: Install Conan
      shell: bash
      run: |
        pip install -U conan
        echo $'tools.system.package_manager:mode=install\ntools.system.package_manager:sudo=True' > global.conf
        conan config install global.conf

    - name: Install CUDA
      uses: Jimver/cuda-toolkit@v0.2.10
      id: cuda-toolkit
      with:
        cuda: '12.1.0'
        method: 'network'
        # 'libraries' is required for 'libcublas-dev'
        sub-packages: '["compiler", "libraries"]'

    - name: Configure CMake
      run: |
        mkdir build && cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release

    - name: Build
      run: |
        cd build
        cmake --build . --verbose

    - name: Build package
      run: |
        cd build
        cmake --build . --target pip-package --verbose

    - name: Rename package
      run: |
        cd build/lib/python_package/pip_package
        rename s/linux/manylinux1/ *.whl

    - name: Publish package
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      env:
        PYPI_API_TOKEN: ${{ secrets.pypi_api_token }}
      run: |
        python -m pip install twine
        cd build/lib/python_package
        python -m twine upload -u "__token__" -p ${PYPI_API_TOKEN} pip_package/*